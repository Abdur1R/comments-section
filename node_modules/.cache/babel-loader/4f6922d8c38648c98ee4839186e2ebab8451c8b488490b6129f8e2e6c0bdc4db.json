{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\comments-section\\\\src\\\\Comment.tsx\";\nimport React from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  comment,\n  replies,\n  setActiveComment,\n  activeComment,\n  updateComment,\n  deleteComment,\n  addComment,\n  parentId = null,\n  currentUserId,\n  onCommentBodyClick,\n  reply\n}) => {\n  var _comment$body$body;\n  const isEditing = activeComment && activeComment.id === comment.id && activeComment.type === \"editing\";\n  const isReplying = activeComment && activeComment.id === comment.id && activeComment.type === \"replying\";\n  const fiveMinutes = 300000;\n  const timePassed = new Date().getTime() - new Date(comment.createdAt).getTime() > fiveMinutes;\n  const canDelete = currentUserId === comment.userId && replies.length === 0;\n  // && !timePassed;\n  const canReply = Boolean(currentUserId);\n  const canEdit = currentUserId === comment.userId;\n  // && !timePassed;\n  const replyId = parentId ? parentId : comment.id;\n  const createdAt = new Date(comment.createdAt).toLocaleDateString();\n  const convertDateFormat = inputDate => {\n    const inputDateTime = new Date(inputDate);\n\n    // Check if the input is a valid date\n    if (isNaN(inputDateTime.getTime())) {\n      return \"Invalid date\";\n    }\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    };\n    const formattedDate = new Intl.DateTimeFormat('en-US', options).format(inputDateTime);\n    return formattedDate.replace(',', '') + ` @ ${inputDateTime.getHours()}:${String(inputDateTime.getMinutes()).padStart(2, '0')} ${inputDateTime.getHours() < 12 ? 'AM' : 'PM'}`;\n  };\n  const AlphabetRange = (start, end, letter) => {\n    if (letter >= start && letter <= end) {\n      return true;\n    }\n    return false;\n  };\n  let PicColor = '';\n  let firstLetter = (comment.username.split(' ')[0][0] || (comment.username.split(' ')[1] ? comment.username.split(' ')[1][0] : comment.username.split(' ')[0][1])).toUpperCase();\n  if (AlphabetRange('A', 'G', firstLetter)) {\n    PicColor = 'A';\n  } else if (AlphabetRange('H', 'M', firstLetter)) {\n    PicColor = 'H';\n  } else if (AlphabetRange('N', 'T', firstLetter)) {\n    PicColor = 'N';\n  } else {\n    PicColor = 'U';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => {\n      if (!isReplying && !isEditing) {\n        onCommentBodyClick && onCommentBodyClick({\n          jsonKey: comment.jsonKey,\n          questionId: comment.questionId\n        });\n      }\n    },\n    style: {\n      marginBottom: `${reply ? '0px' : '28px'}`\n    },\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `comment-image-container color${PicColor}`,\n      children: comment.username.split(' ')[0][0] + (comment.username.split(' ')[1] ? comment.username.split(' ')[1][0] : comment.username.split(' ')[0][1])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-right-part\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-author\",\n          children: comment.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-time\",\n          children: convertDateFormat(comment.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-text\",\n        children: comment.body.body ? /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: comment.body.body.innerHTML\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }, this) : comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(CommentForm, {\n        submitLabel: \"Update\",\n        hasCancelButton: true,\n        initialText: (_comment$body$body = comment.body.body) !== null && _comment$body$body !== void 0 ? _comment$body$body : comment.body,\n        handleSubmit: text => updateComment(text, comment.id),\n        handleCancel: () => {\n          setActiveComment(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: [canReply && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-action\",\n          onClick: () => setActiveComment({\n            id: comment.id,\n            type: \"replying\"\n          }),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), canEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-action\",\n          onClick: () => setActiveComment({\n            id: comment.id,\n            type: \"editing\"\n          }),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), canDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-action\",\n          onClick: () => deleteComment(comment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), isReplying && /*#__PURE__*/_jsxDEV(CommentForm, {\n        submitLabel: \"Reply\",\n        hasCancelButton: true,\n        handleSubmit: text => addComment(text, replyId),\n        handleCancel: () => {\n          setActiveComment(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"replies\",\n        children: replies.map(reply => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: reply,\n          setActiveComment: setActiveComment,\n          activeComment: activeComment,\n          updateComment: updateComment,\n          deleteComment: deleteComment,\n          addComment: addComment,\n          parentId: comment.id,\n          replies: [],\n          currentUserId: currentUserId,\n          reply: true\n        }, reply.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, comment.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","CommentForm","jsxDEV","_jsxDEV","Comment","comment","replies","setActiveComment","activeComment","updateComment","deleteComment","addComment","parentId","currentUserId","onCommentBodyClick","reply","_comment$body$body","isEditing","id","type","isReplying","fiveMinutes","timePassed","Date","getTime","createdAt","canDelete","userId","length","canReply","Boolean","canEdit","replyId","toLocaleDateString","convertDateFormat","inputDate","inputDateTime","isNaN","options","year","month","day","hour","minute","hour12","formattedDate","Intl","DateTimeFormat","format","replace","getHours","String","getMinutes","padStart","AlphabetRange","start","end","letter","PicColor","firstLetter","username","split","toUpperCase","onClick","jsonKey","questionId","style","marginBottom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","body","dangerouslySetInnerHTML","__html","innerHTML","submitLabel","hasCancelButton","initialText","handleSubmit","text","handleCancel","map","_c","$RefreshReg$"],"sources":["C:/Projects/comments-section/src/Comment.tsx"],"sourcesContent":["import React from \"react\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nconst Comment = ({\r\n    comment,\r\n    replies,\r\n    setActiveComment,\r\n    activeComment,\r\n    updateComment,\r\n    deleteComment,\r\n    addComment,\r\n    parentId = null,\r\n    currentUserId,\r\n    onCommentBodyClick,\r\n    reply\r\n}: any) => {\r\n    const isEditing =\r\n        activeComment &&\r\n        activeComment.id === comment.id &&\r\n        activeComment.type === \"editing\";\r\n    const isReplying =\r\n        activeComment &&\r\n        activeComment.id === comment.id &&\r\n        activeComment.type === \"replying\";\r\n    const fiveMinutes = 300000;\r\n    const timePassed: any = (new Date().getTime() - new Date(comment.createdAt).getTime()) > fiveMinutes;\r\n    const canDelete = currentUserId === comment.userId && replies.length === 0;\r\n    // && !timePassed;\r\n    const canReply = Boolean(currentUserId);\r\n    const canEdit = currentUserId === comment.userId\r\n    // && !timePassed;\r\n    const replyId = parentId ? parentId : comment.id;\r\n    const createdAt = new Date(comment.createdAt).toLocaleDateString();\r\n    const convertDateFormat = (inputDate: any) => {\r\n        const inputDateTime = new Date(inputDate);\r\n\r\n        // Check if the input is a valid date\r\n        if (isNaN(inputDateTime.getTime())) {\r\n            return \"Invalid date\";\r\n        }\r\n\r\n        const options: any = {\r\n            year: 'numeric',\r\n            month: 'short',\r\n            day: '2-digit',\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            hour12: true\r\n        };\r\n\r\n        const formattedDate = new Intl.DateTimeFormat('en-US', options).format(inputDateTime);\r\n\r\n        return formattedDate.replace(',', '') + ` @ ${inputDateTime.getHours()}:${String(inputDateTime.getMinutes()).padStart(2, '0')} ${inputDateTime.getHours() < 12 ? 'AM' : 'PM'}`;\r\n    };\r\n\r\n    const AlphabetRange = (start: string, end: string, letter: string): boolean => {\r\n        if (letter >= start && letter <= end) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    let PicColor = '';\r\n    let firstLetter = ((comment.username.split(' ')[0][0]) || (comment.username.split(' ')[1] ? comment.username.split(' ')[1][0] : comment.username.split(' ')[0][1])).toUpperCase();\r\n\r\n    if (AlphabetRange('A', 'G', firstLetter)) {\r\n        PicColor = 'A';\r\n    } else if (AlphabetRange('H', 'M', firstLetter)) {\r\n        PicColor = 'H';\r\n    } else if (AlphabetRange('N', 'T', firstLetter)) {\r\n        PicColor = 'N'\r\n    } else {\r\n        PicColor = 'U';\r\n    }\r\n    return (\r\n        <div onClick={() => {\r\n            if (!isReplying && !isEditing) {\r\n                onCommentBodyClick && onCommentBodyClick({ jsonKey: comment.jsonKey, questionId: comment.questionId });\r\n            }\r\n        }} key={comment.id} style={{ marginBottom: `${reply ? '0px' : '28px'}` }} className=\"comment\">\r\n            <div className={`comment-image-container color${PicColor}`}>\r\n                {comment.username.split(' ')[0][0] + (comment.username.split(' ')[1] ? comment.username.split(' ')[1][0] : comment.username.split(' ')[0][1])}\r\n                {/* <img src=\"/user-icon.png\" /> */}\r\n            </div>\r\n            <div className=\"comment-right-part\">\r\n                <div className=\"comment-content\">\r\n                    <div className=\"comment-author\">{comment.username}</div>\r\n                    <div className=\"comment-time\">{convertDateFormat(comment.createdAt)}</div>\r\n                </div>\r\n                {!isEditing &&\r\n                    <div className=\"comment-text\">\r\n                        {comment.body.body\r\n                            ? <div dangerouslySetInnerHTML={{ __html: comment.body.body.innerHTML }} />\r\n                            : comment.body}\r\n                    </div>}\r\n                {isEditing && (\r\n                    <CommentForm\r\n                        submitLabel=\"Update\"\r\n                        hasCancelButton\r\n                        initialText={comment.body.body ?? comment.body}\r\n                        handleSubmit={(text: any) => updateComment(text, comment.id)}\r\n                        handleCancel={() => {\r\n                            setActiveComment(null);\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"comment-actions\">\r\n                    {canReply && (\r\n                        <div\r\n                            className=\"comment-action\"\r\n                            onClick={() =>\r\n                                setActiveComment({ id: comment.id, type: \"replying\" })\r\n                            }\r\n                        >\r\n                            Reply\r\n                        </div>\r\n                    )}\r\n                    {canEdit && (\r\n                        <div\r\n                            className=\"comment-action\"\r\n                            onClick={() =>\r\n                                setActiveComment({ id: comment.id, type: \"editing\" })\r\n                            }\r\n                        >\r\n                            Edit\r\n                        </div>\r\n                    )}\r\n                    {canDelete && (\r\n                        <div\r\n                            className=\"comment-action\"\r\n                            onClick={() => deleteComment(comment.id)}\r\n                        >\r\n                            Delete\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {isReplying && (\r\n                    <CommentForm\r\n                        submitLabel=\"Reply\"\r\n                        hasCancelButton\r\n                        handleSubmit={(text: any) => addComment(text, replyId)}\r\n                        handleCancel={() => {\r\n                            setActiveComment(null);\r\n                        }}\r\n                    />\r\n                )}\r\n                {replies.length > 0 && (\r\n                    <div className=\"replies\">\r\n                        {replies.map((reply: any) => (\r\n                            <Comment\r\n                                comment={reply}\r\n                                key={reply.id}\r\n                                setActiveComment={setActiveComment}\r\n                                activeComment={activeComment}\r\n                                updateComment={updateComment}\r\n                                deleteComment={deleteComment}\r\n                                addComment={addComment}\r\n                                parentId={comment.id}\r\n                                replies={[]}\r\n                                currentUserId={currentUserId}\r\n                                reply={true}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}