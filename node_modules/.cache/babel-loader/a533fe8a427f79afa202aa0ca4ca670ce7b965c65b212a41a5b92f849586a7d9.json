{"ast":null,"code":"import React from\"react\";import CommentForm from\"./CommentForm\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Comment=_ref=>{var _comment$body$body;let{comment,replies,setActiveComment,activeComment,updateComment,deleteComment,addComment,parentId=null,currentUserId,onCommentBodyClick,reply}=_ref;const isEditing=activeComment&&activeComment.id===comment.id&&activeComment.type===\"editing\";const isReplying=activeComment&&activeComment.id===comment.id&&activeComment.type===\"replying\";const fiveMinutes=300000;const timePassed=new Date().getTime()-new Date(comment.createdAt).getTime()>fiveMinutes;const canDelete=currentUserId===comment.userId&&replies.length===0;// && !timePassed;\nconst canReply=Boolean(currentUserId);const canEdit=currentUserId===comment.userId;// && !timePassed;\nconst replyId=parentId?parentId:comment.id;const createdAt=new Date(comment.createdAt).toLocaleDateString();const convertDateFormat=inputDate=>{const inputDateTime=new Date(inputDate);// Check if the input is a valid date\nif(isNaN(inputDateTime.getTime())){return\"Invalid date\";}const options={year:'numeric',month:'short',day:'2-digit',hour:'2-digit',minute:'2-digit',hour12:true};const formattedDate=new Intl.DateTimeFormat('en-US',options).format(inputDateTime);return formattedDate.replace(',','')+` @ ${inputDateTime.getHours()}:${String(inputDateTime.getMinutes()).padStart(2,'0')} ${inputDateTime.getHours()<12?'AM':'PM'}`;};const AlphabetRange=(start,end,letter)=>{if(letter>=start&&letter<=end){return true;}return false;};let PicColor='';let firstLetter=(comment.username.split(' ')[0][0]||(comment.username.split(' ')[1]?comment.username.split(' ')[1][0]:comment.username.split(' ')[0][1])).toUpperCase();if(AlphabetRange('A','G',firstLetter)){PicColor='A';}else if(AlphabetRange('H','M',firstLetter)){PicColor='H';}else if(AlphabetRange('N','T',firstLetter)){PicColor='N';}else{PicColor='U';}return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>{if(!isReplying&&!isEditing){onCommentBodyClick&&onCommentBodyClick({jsonKey:comment.jsonKey,questionId:comment.questionId});}},style:{marginBottom:`${reply?'0px':'28px'}`},className:\"comment\",children:[/*#__PURE__*/_jsx(\"div\",{className:`comment-image-container color${PicColor}`,children:comment.username.split(' ')[0][0]+(comment.username.split(' ')[1]?comment.username.split(' ')[1][0]:comment.username.split(' ')[0][1])}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-right-part\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"comment-author\",children:comment.username}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-time\",children:convertDateFormat(comment.createdAt)})]}),!isEditing&&/*#__PURE__*/_jsx(\"div\",{className:\"comment-text\",children:comment.body.body?/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:comment.body.body.innerHTML}}):comment.body}),isEditing&&/*#__PURE__*/_jsx(CommentForm,{submitLabel:\"Update\",hasCancelButton:true,initialText:(_comment$body$body=comment.body.body)!==null&&_comment$body$body!==void 0?_comment$body$body:comment.body,handleSubmit:text=>updateComment(text,comment.id),handleCancel:()=>{setActiveComment(null);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-actions\",children:[canReply&&/*#__PURE__*/_jsx(\"div\",{className:\"comment-action\",onClick:()=>setActiveComment({id:comment.id,type:\"replying\"}),children:\"Reply\"}),canEdit&&/*#__PURE__*/_jsx(\"div\",{className:\"comment-action\",onClick:()=>setActiveComment({id:comment.id,type:\"editing\"}),children:\"Edit\"}),canDelete&&/*#__PURE__*/_jsx(\"div\",{className:\"comment-action\",onClick:()=>deleteComment(comment.id),children:\"Delete\"})]}),isReplying&&/*#__PURE__*/_jsx(CommentForm,{submitLabel:\"Reply\",hasCancelButton:true,handleSubmit:text=>addComment(text,replyId),handleCancel:()=>{setActiveComment(null);}}),replies.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"replies\",children:replies.map(reply=>/*#__PURE__*/_jsx(Comment,{comment:reply,setActiveComment:setActiveComment,activeComment:activeComment,updateComment:updateComment,deleteComment:deleteComment,addComment:addComment,parentId:comment.id,replies:[],currentUserId:currentUserId,reply:true},reply.id))})]})]},comment.id);};export default Comment;","map":{"version":3,"names":["React","CommentForm","jsx","_jsx","jsxs","_jsxs","Comment","_ref","_comment$body$body","comment","replies","setActiveComment","activeComment","updateComment","deleteComment","addComment","parentId","currentUserId","onCommentBodyClick","reply","isEditing","id","type","isReplying","fiveMinutes","timePassed","Date","getTime","createdAt","canDelete","userId","length","canReply","Boolean","canEdit","replyId","toLocaleDateString","convertDateFormat","inputDate","inputDateTime","isNaN","options","year","month","day","hour","minute","hour12","formattedDate","Intl","DateTimeFormat","format","replace","getHours","String","getMinutes","padStart","AlphabetRange","start","end","letter","PicColor","firstLetter","username","split","toUpperCase","onClick","jsonKey","questionId","style","marginBottom","className","children","body","dangerouslySetInnerHTML","__html","innerHTML","submitLabel","hasCancelButton","initialText","handleSubmit","text","handleCancel","map"],"sources":["C:/Projects/comments-section/src/Comment.tsx"],"sourcesContent":["import React from \"react\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nconst Comment = ({\r\n    comment,\r\n    replies,\r\n    setActiveComment,\r\n    activeComment,\r\n    updateComment,\r\n    deleteComment,\r\n    addComment,\r\n    parentId = null,\r\n    currentUserId,\r\n    onCommentBodyClick,\r\n    reply\r\n}: any) => {\r\n    const isEditing =\r\n        activeComment &&\r\n        activeComment.id === comment.id &&\r\n        activeComment.type === \"editing\";\r\n    const isReplying =\r\n        activeComment &&\r\n        activeComment.id === comment.id &&\r\n        activeComment.type === \"replying\";\r\n    const fiveMinutes = 300000;\r\n    const timePassed: any = (new Date().getTime() - new Date(comment.createdAt).getTime()) > fiveMinutes;\r\n    const canDelete = currentUserId === comment.userId && replies.length === 0;\r\n    // && !timePassed;\r\n    const canReply = Boolean(currentUserId);\r\n    const canEdit = currentUserId === comment.userId\r\n    // && !timePassed;\r\n    const replyId = parentId ? parentId : comment.id;\r\n    const createdAt = new Date(comment.createdAt).toLocaleDateString();\r\n    const convertDateFormat = (inputDate: any) => {\r\n        const inputDateTime = new Date(inputDate);\r\n\r\n        // Check if the input is a valid date\r\n        if (isNaN(inputDateTime.getTime())) {\r\n            return \"Invalid date\";\r\n        }\r\n\r\n        const options: any = {\r\n            year: 'numeric',\r\n            month: 'short',\r\n            day: '2-digit',\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            hour12: true\r\n        };\r\n\r\n        const formattedDate = new Intl.DateTimeFormat('en-US', options).format(inputDateTime);\r\n\r\n        return formattedDate.replace(',', '') + ` @ ${inputDateTime.getHours()}:${String(inputDateTime.getMinutes()).padStart(2, '0')} ${inputDateTime.getHours() < 12 ? 'AM' : 'PM'}`;\r\n    };\r\n\r\n    const AlphabetRange = (start: string, end: string, letter: string): boolean => {\r\n        if (letter >= start && letter <= end) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    let PicColor = '';\r\n    let firstLetter = ((comment.username.split(' ')[0][0]) || (comment.username.split(' ')[1] ? comment.username.split(' ')[1][0] : comment.username.split(' ')[0][1])).toUpperCase();\r\n\r\n    if (AlphabetRange('A', 'G', firstLetter)) {\r\n        PicColor = 'A';\r\n    } else if (AlphabetRange('H', 'M', firstLetter)) {\r\n        PicColor = 'H';\r\n    } else if (AlphabetRange('N', 'T', firstLetter)) {\r\n        PicColor = 'N'\r\n    } else {\r\n        PicColor = 'U';\r\n    }\r\n    return (\r\n        <div onClick={() => {\r\n            if (!isReplying && !isEditing) {\r\n                onCommentBodyClick && onCommentBodyClick({ jsonKey: comment.jsonKey, questionId: comment.questionId });\r\n            }\r\n        }} key={comment.id} style={{ marginBottom: `${reply ? '0px' : '28px'}` }} className=\"comment\">\r\n            <div className={`comment-image-container color${PicColor}`}>\r\n                {comment.username.split(' ')[0][0] + (comment.username.split(' ')[1] ? comment.username.split(' ')[1][0] : comment.username.split(' ')[0][1])}\r\n                {/* <img src=\"/user-icon.png\" /> */}\r\n            </div>\r\n            <div className=\"comment-right-part\">\r\n                <div className=\"comment-content\">\r\n                    <div className=\"comment-author\">{comment.username}</div>\r\n                    <div className=\"comment-time\">{convertDateFormat(comment.createdAt)}</div>\r\n                </div>\r\n                {!isEditing &&\r\n                    <div className=\"comment-text\">\r\n                        {comment.body.body\r\n                            ? <div dangerouslySetInnerHTML={{ __html: comment.body.body.innerHTML }} />\r\n                            : comment.body}\r\n                    </div>}\r\n                {isEditing && (\r\n                    <CommentForm\r\n                        submitLabel=\"Update\"\r\n                        hasCancelButton\r\n                        initialText={comment.body.body ?? comment.body}\r\n                        handleSubmit={(text: any) => updateComment(text, comment.id)}\r\n                        handleCancel={() => {\r\n                            setActiveComment(null);\r\n                        }}\r\n                    />\r\n                )}\r\n                <div className=\"comment-actions\">\r\n                    {canReply && (\r\n                        <div\r\n                            className=\"comment-action\"\r\n                            onClick={() =>\r\n                                setActiveComment({ id: comment.id, type: \"replying\" })\r\n                            }\r\n                        >\r\n                            Reply\r\n                        </div>\r\n                    )}\r\n                    {canEdit && (\r\n                        <div\r\n                            className=\"comment-action\"\r\n                            onClick={() =>\r\n                                setActiveComment({ id: comment.id, type: \"editing\" })\r\n                            }\r\n                        >\r\n                            Edit\r\n                        </div>\r\n                    )}\r\n                    {canDelete && (\r\n                        <div\r\n                            className=\"comment-action\"\r\n                            onClick={() => deleteComment(comment.id)}\r\n                        >\r\n                            Delete\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {isReplying && (\r\n                    <CommentForm\r\n                        submitLabel=\"Reply\"\r\n                        hasCancelButton\r\n                        handleSubmit={(text: any) => addComment(text, replyId)}\r\n                        handleCancel={() => {\r\n                            setActiveComment(null);\r\n                        }}\r\n                    />\r\n                )}\r\n                {replies.length > 0 && (\r\n                    <div className=\"replies\">\r\n                        {replies.map((reply: any) => (\r\n                            <Comment\r\n                                comment={reply}\r\n                                key={reply.id}\r\n                                setActiveComment={setActiveComment}\r\n                                activeComment={activeComment}\r\n                                updateComment={updateComment}\r\n                                deleteComment={deleteComment}\r\n                                addComment={addComment}\r\n                                parentId={comment.id}\r\n                                replies={[]}\r\n                                currentUserId={currentUserId}\r\n                                reply={true}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}